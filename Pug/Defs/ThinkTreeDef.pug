mixin ThinkNode(name, extra)
  unless block || extra
    li(Class=name)/
  else
    li(Class=name)
      +Object(extra)
      if block
        subNodes: block

mixin ThinkNodeSubtree(name)
  li(Class="ThinkNode_Subtree"): treeDef!= name

mixin ThinkTreeDef(defName, thinkRoot="ThinkNode_Priority")
  ThinkTreeDef&attributes(attributes)
    defName=defName
    thinkRoot(Class=thinkRoot): subNodes: block
        
mixin Thinktree(defName)
  +ThinkTreeDef(defName)&attributes(attributes)
    +ThinkNode("ThinkNode_ConditionalMustKeepLyingDown")
      +ThinkNode("JobGiver_KeepLyingDown")
    +ThinkNodeSubtree("Downed")
    +ThinkNodeSubtree("BurningResponse")
    +ThinkNode("JobGiver_ReactToCloseMeleeThreat")
    +ThinkNode("ThinkNode_QueuedJob")
    block
    +ThinkNode("ThinkNode_Tagger", {tagToGive:"Idle"})
      +ThinkNode("JobGiver_WanderAnywhere", {maxDanger:"Deadly",ticksBetweenWandersRange:"120~240"})
    +ThinkNode("JobGiver_IdleError")

    
+ThinkTreeDef("Typhon_Thinktree_Constant")
  +ThinkNode("ThinkNode_ConditionalCanDoConstantThinkTreeJobNow")

  

+Thinktree("Typhon_Thinktree_Phantom")
  +ThinkNode("ThinkNode_ChancePerHour_Constant", {mtbDays: 5})
    +ThinkNode("JobGiver_ExitMapRandom", {defaultLocomotion: "Walk"})